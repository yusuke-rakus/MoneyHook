<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">

	<!-- ユーザーIDからユーザーNoを取得 -->
	<select id="getUserNoFromUserId" resultType="java.lang.Long">
		SELECT
			user_no
		FROM
			user
		WHERE
			 user_id = #{userId};
	</select>

	<!-- ユーザー登録 -->
	<insert id="registUser"
		parameterType="com.example.form.RegistUserForm">
		INSERT INTO
		user(
			user_id,
			email,
			password
		)
		VALUES(
			#{userId},
			#{email},
			#{password}
		);
	</insert>
	
	<!-- ログイン -->
	<select id="login" resultType="com.example.domain.User">
		SELECT
			u.user_id,
			u.password,
			tc.theme_color_code,
			tc.theme_color_gradient_code
		FROM
			user u
		INNER JOIN theme_color tc ON tc.theme_color_id = u.theme_color_id
		WHERE
			u.email = #{email}
		UNION
		SELECT
			u.user_id,
			u.password,
			tc.theme_color_code,
			tc.theme_color_gradient_code
		FROM
			user u
		INNER JOIN theme_color tc ON tc.theme_color_id = u.theme_color_id
		WHERE
			u.email = #{email};
	</select>
	
	<!-- ユーザー情報の取得 -->
	<select id="getUserInfo" resultType="com.example.domain.User">
		SELECT
			email
		FROM
			user
		WHERE
			user_id = #{userId};
	</select>
	
	<!-- パスワード変更 -->
	<update id="changePassword">
		UPDATE
			user
		SET
			password=#{newPassword}
		WHERE
			user_no=#{userNo}
		AND
			password=#{password};
	</update>
	
	<!-- メールアドレス変更 -->
	<update id="changeEmail">
		UPDATE
			user
		SET
			email=#{email}
		WHERE
			user_no=#{userNo}
		AND
			password=#{password};
	</update>
	
	<!-- テーマカラーの変更 -->
	<update id="editThemeColor">
		UPDATE
			user
		SET
			theme_color_id=#{themeColorId}
		WHERE
			user_no=#{userNo};
	</update>
	
	<!-- テーマカラーリストの取得 -->
	<select id="getThemeColor" resultType="com.example.domain.User">
		SELECT
			theme_color_id,
			theme_color_code,
			theme_color_gradient_code
		FROM
			theme_color;
	</select>
	
	<!-- 当日に問い合わせをしたかチェック -->
	<select id="getInquiry" resultType="com.example.form.SendInquiryForm">
		SELECT
			user_no,
			inquiry,
			inquiry_date
		FROM
			inquiry_data
		WHERE
			user_no = #{userNo}
		AND inquiry_date = #{inquiryDate};
	</select>
	
	<!-- 問い合わせを登録 -->
	<insert id="insertInquiry" parameterType="com.example.form.SendInquiryForm">
		INSERT INTO
		inquiry_data(
			user_no,
			inquiry,
			inquiry_date
		)
		VALUES(
			#{userNo},
			#{inquiry},
			#{inquiryDate}
		);
	</insert>
	
	<!-- パスワードを忘れた場合の再設定メール送信 -->
	<select id="checkEmailExist" resultType="com.example.domain.User">
		SELECT
			user_no
		FROM
			user
		WHERE
			email = #{email};
	</select>
	
	<!-- リセットパスワードパラメータの設定 -->
	<update id="setResetPasswordParam">
		UPDATE
			user
		SET
			reset_password_param=#{resetPasswordParam}
		WHERE
			email=#{email};
	</update>
	
	<!-- パスワードを忘れた場合の再設定実行 -->
	<update id="resetPassword">
		UPDATE
			user
		SET
			password=#{password},
			reset_password_param=null
		WHERE
			email=#{email};
	</update>
	
	<!-- リセットパスワードパラメータのリセット -->
	<update id="deletePasswordParam">
		UPDATE
			user
		SET
			reset_password_param=null
		WHERE
			user_no=#{userNo};
	</update>
	
	<!-- パスワードを忘れた場合の再設定画面表示 -->
	<select id="resetPasswordPage" resultType="com.example.domain.User">
		SELECT
			email
		FROM
			user
		WHERE
			reset_password_param = #{param};
	</select>

</mapper>